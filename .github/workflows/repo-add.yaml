name: repo-add
on:
  repository_dispatch:
    types: [package_update]

jobs:
  wait:
    runs-on: ubuntu-latest
    steps:
      - 
        name: sleep max 30s
        run: sleep $((1 + $RANDOM % 30))
      - 
        id: wait_for_concurrent
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  update:
    needs: wait
    runs-on: ubuntu-latest
    container:
      image: docker://manjarosway/base:latest
    steps:
      - 
        name: check out the repo
        id: checkout_repo
        uses: actions/checkout@v2.3.4
        with:
          ref: 'master'
      -  
        name: check if the repo was allowed to dispatch
        id: grant
        env:
          REPO: ${{ github.event.client_payload.repository }}
        run:
          grep -Fxq "${REPO}" allowed_repos
      -
        name: download the package to be added to the repo
        id: download_release
        env:
          REPO: ${{ github.event.client_payload.repository }}
          VERSION: ${{ github.event.client_payload.version }}
          FILE: ${{ github.event.client_payload.file_name }}
        run: |
          curl --location --remote-header-name --remote-name --silent -O --output-dir /tmp \
            https://github.com/$REPO/releases/download/$VERSION/$FILE
          ls -lh /tmp/*.zst
      - 
        name: update the existing repo with the downloaded package
        id: update_repo
        run: |
          mkdir -p docs/x86_64 docs/aarch64
          git config --global user.name "Repo Update Bot"
          git config --global user.email "info@manjaro-sway.download"
          git config pull.ff only
          git pull 

          echo ${{ github.event.client_payload.file_name }} | grep -q -E -i -w '(x86_64|any)' && \
            cp /tmp/${{ github.event.client_payload.file_name }} docs/x86_64/ && \
            echo "nothing to do for x86_64"


          echo ${{ github.event.client_payload.file_name }} | grep -q -E -i -w '(aarch64|any)' && \
            cp /tmp/${{ github.event.client_payload.file_name }} docs/aarch64/ && \
              echo "nothing to do for aarch64"

          if [ -n "$(git status --porcelain)" ]; then

            echo ${{ github.event.client_payload.file_name }} | grep -q -E -i -w '(x86_64|any)' && \
              repo-add --new --remove --prevent-downgrade docs/x86_64/manjaro-sway.db.tar.gz docs/x86_64/${{ github.event.client_payload.file_name }} && \
              echo "nothing to do for x86_64"

            echo ${{ github.event.client_payload.file_name }} | grep -q -E -i -w '(aarch64|any)' && \
              repo-add --new --remove --prevent-downgrade docs/aarch64/manjaro-sway.db.tar.gz docs/aarch64/${{ github.event.client_payload.file_name }} && \
              echo "nothing to do for aarch64"

            rm -f docs/*/*.old

            cp -f README.md docs/index.md

            date >docs/_includes/date

            git add docs/*
                      
            git commit -m "chore: update ${{ github.event.client_payload.repository }} (${{ github.event.client_payload.file_name }})"
            git push
          fi
                    
          